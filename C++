#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;
const int N = 1e6;
char st[N];
int tt = -1;

void push(char c)
{
    st[++tt] = c;
}

void pop()
{
    tt--;
}

char top()
{
    return st[tt];
}

bool empty()
{
    return tt <= -1;
}

int main()
{
    char c; // input char
    bool is_matched = true;
    while(is_matched && (c = cin.get()) != '\n')
    {
        if(c == '{' || c == '[' || c == '(') push(c);
        
        else if(c == '}' || c == ']' || c == ')')
        {
            if(empty()) // Failure: closing brackets are more than opening brackets
            {
                cout << "Unmatched closing bracket " << c << "detected" << endl;
                is_matched = false; 
            }
            else
            {
                char match = top();
                pop();
                is_matched = ((c == '}' && match == '{')||
                              (c == ']' && match == '[')||
                              (c == ')' && match == '('));
                if(! is_matched) // Failure : unmathced
                    cout << "Bad match" << match << c << endl;
            }
        }
    }
    if(! empty()) // Failure: opening brackets are more than closing brackets
    {
        cout << "Unmatched opening bracket(s) detected" << endl;
    }

    system("pause");
    return 0;
}
